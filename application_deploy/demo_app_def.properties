###
# Pulsar Client Applications
# 
# Format:
#   client_app_id=<prog_language>|'client_app'|<app_path_identifier>|<class_name>|<app_cmd_parameters>
#
# Fields: 
#   - <prog_language> : programming language that the client application is written with| e.g. Java or Python
#   - 'client_app' : literal as is
#   - <app_path_identifier> : releative path under 'application_code" folder| e.g. application_code/client_apps/java/[app_path_identifier]
#   - <class_name> : java class name without package (only relevant with Java apps)| e.g. PulsarConsumerFullCfg 
#                    package name is standard as 'com.example.pulsarworkshop'
#   - <app_cmd_parameters> : space separated CLI input paramters of the specified application
# --------------------------------------------------------------------------------

# A Pulsar message producer using Pulsar native client API
nativeapi_producer_full_config=java|client_app|nativeapi_producer_full_config|PulsarProducerFullCfg|-numMsg 10 -topic public/default/t1 -connFile ~/projects/pulsar/apache-pulsar/conf/client.conf -srcWrkldFile ~/projects/demos/auto-poc/pulsar_workshop/raw_data/sensor_telemetry.csv

# A Pulsar message consumer using Pulsar native client API
nativeapi_consumer_full_config=java|client_app|nativeapi_consumer_full_config|PulsarConsumerFullCfg|-numMsg 10 -topic public/default/t1 -connFile ~/projects/pulsar/apache-pulsar/conf/client.conf -sbn mysub

# A Pulsar consumer that enables re-delivery and dead letter topic
redelivery_consumer=java|client_app|redelivery_consumer|RedeliveryConsumerApp|-num 1 -top as-demo/default/poc-test -dlt as-demo/default/poc-test-dlq -con ~/projects/pulsar/apache-pulsar/conf/client.conf -sbn test

# A Pulsar reader demo that produces a number of messages and then starts consuming from the middle
reader=java|client_app|reader|ReaderApp| -top as-demo/default/reader-demo -con ~/projects/pulsar/apache-pulsar/conf/client.conf 

###
# Pulsar Functions
# 
# Format:
#   client_app_id=<prog_language>|'function'|<app_path_identifier>|<class_name>|<function_creation_CLI_parametes>
#
# Fields: 
#   - <prog_language> : programming language that the client application is written with| e.g. Java or Python
#   - 'function' : literal as is
#   - <app_path_identifier> : releative path under 'application_code" folder| e.g. application_code/client_apps/java/[app_path_identifier]
#   - <class_name> : java class name without package (only relevant with Java apps)| e.g. AddMetadataFunc 
#                    package name is standard as 'com.example.pulsarworkshop'
#   - <function_creation_CLI_parametes> : space separated pulsar function parameters
#     see: # https://pulsar.staged.apache.org/functions-rest-api/?version=2.9.1&apiversion=v3#operation/registerFunction
# --------------------------------------------------------------------------------
add-metadata=java|function|add-metadata|AddMetadataFunc|tenant:public namespace:default inputs:public/default/t1 output:public/default/t2 autoAck:true
